<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 直接执行已映射 -->
<!-- <mapper namespace="com.rent.models.UserMapper">
	<select id="selectUserByID" parameterType="int" resultType="User">
		select * from `user` where id = #{id}
	</select>
</mapper> -->


<!-- 用接口方式实现 -->
<mapper namespace="com.rent.inter.IUserOperation">
	
	<!-- 配置返回类型resultMap，用于返回List<User> -->
	<resultMap type="User" id="resultListUser">
		<id column="id" property="id" />
		<result column="userName" property="userName" />
		<result column="userAge" property="userAge" />
		<result column="userAddress" property="userAddress" />
	</resultMap>
	
	<!-- User 联合文章进行查询 方法之二的配置 (多对一的方式) -->	
	<resultMap id="resultUserArticleList" type="Article">
	    <id property="id" column="aid" />
	    <result property="title" column="title" />
	    <result property="content" column="content" />	    
	    <association property="user" javaType="User" resultMap="resultListUser" />	         
	</resultMap>
	
	<select id="getUserArticles" parameterType="int" resultMap="resultUserArticleList">
	   select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article 
	          where user.id=article.userid and user.id=#{id}
	</select>
	
	
	<select id="selectUserByID" parameterType="int" resultType="User">
		select * from `user` where id = #{id}
	</select>
	
	<!-- 返回list的select语句，注意resultMap的值是指向下面定义好的 -->
	<select id="selectUsers" parameterType="string" resultMap="resultListUser">
		select * from user where userName like #{userName}
	</select>
	
	<!-- 执行增加操作的SQL语句，id和parameterType分别与IUserOperation接口中的addUser方法
		和参数类型一致。以#{name}的形式引用Student参数的name属性，MyBatis将使用反射读取Student
		参数的此属性，#{name}中的name大小写敏感。引用其他的gender等属性与此一致。
		useGeneratedKeys设置为"true"表明要mybatis获取由数据库自动生成的主键；keyProperty="id"
		指定把获取到的主键注入到student的id属性 -->
	<insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into user(userName,userAge,userAddress)
			values(#{userName},#{userAge},#{userAddress})		
	</insert>
	
	<!-- 更新数据 -->
	<update id="updateUser" parameterType="User">
		update user set userName=#{userName},userAge=#{userAge},
		userAddress=#{userAddress} where id=#{id}
	</update>
	
	<!-- 删除数据 -->
	<delete id="deleteUser" parameterType="int">
		delete from user where id=#{id}
	</delete>
	
	<!-- 分页查询测试 -->
    <select id="selectArticleListPage" resultMap="resultUserArticleList">
        select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article 
	          where user.id=article.userid and user.id=#{userid}
    </select>
	
</mapper>


